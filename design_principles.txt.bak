Solid Design Principles:

1. Single Responsiblity Principle
2. Open-Closed Principle
3. Liskov substitution principle
4. Interface Seggregation principle
5. Depedency inversion principle

Single Responsiblity Principle:

class and method should have single reason for changing.

Open-Closed Principle:

means that classes are open for inheritance and methods can be overridden and closed means that existing base classes should not be modified.

Liskov Substitution Principle:

liskov substitution is voilated when child class completely modifies the behaviour/contract of base class method by overriding it.


